---
- hosts: all
  vars:
    homebrew_formulas:
      - git
      - php@7.4
      - php@8.1
      - php@8.2
      - php
      - caddy
      - composer
      - mariadb@10.11
      - mailhog
      - dnsmasq
    php_versions:
      - 7.4
      - 8.1
      - 8.2
      - 8.3
    pecl_exec_locations:
      - /usr/local/opt/php@7.4/bin/pecl
      - /usr/local/opt/php@8.1/bin/pecl
      - /usr/local/opt/php@8.2/bin/pecl
      - /usr/local/opt/php@8.3/bin/pecl

  tasks:
  - name: Create directory for ansible custom facts
    ansible.builtin.file:
      state: directory
      recurse: true
      path: /usr/local/etc/ansible/facts.d
  - name: Install custom PHP version fact
    ansible.builtin.copy:
      src: files/php_version.fact
      dest: /usr/local/etc/ansible/facts.d
      mode: preserve
  - name: Tap shivammathur/php for php@7.4
    community.general.homebrew_tap:
      name: shivammathur/php
      state: present
  - name: Ensure that required homebrew packages are installed (PHP, Caddy, MariaDB, etc.)
    community.general.homebrew:
      name: "{{ item }}"
      state: latest
    loop: "{{ homebrew_formulas }}"
  - name: Re-read facts after adding custom fact and installing/updating PHP
    ansible.builtin.setup:
      filter: ansible_local
      fact_path: /usr/local/etc/ansible/facts.d
  - name: Unlink php 8.2
    community.general.homebrew:
      name: php
      state: unlinked
    when: ansible_local['php_version'] != "8.1"
  - name: Link php 8.1 for CLI use
    community.general.homebrew:
      name: php@8.1
      state: linked
    when: ansible_local['php_version'] != "8.1"
  - name: Ensure pecl apcu package is installed for all PHP versions
    community.general.pear:
      executable: "{{ item }}"
      name: pecl/apcu
      state: latest
      prompts:
        - (.*)Enable internal debugging in APCu \[no\]
    loop: "{{ pecl_exec_locations }}"
  # Note that as of 3.2.0, xdebug no longer supports PHP 7.x. So we don't try to install the latest.
  - name: Ensure pecl xdebug package is installed for PHP 7.4
    community.general.pear:
      executable: /usr/local/opt/php@7.4/bin/pecl
      name: pecl/xdebug
      state: present
  - name: Ensure pecl xdebug package is installed for all PHP 8.x versions
    community.general.pear:
      executable: "{{ item }}"
      name: pecl/xdebug
      state: latest
    loop:
      - /usr/local/opt/php@8.1/bin/pecl
      - /usr/local/opt/php@8.2/bin/pecl
      - /usr/local/opt/php@8.3/bin/pecl
  - name: Remove php.ini changes from apcu pecl install
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      line: extension="apcu.so"
      state: absent
    loop: "{{ php_versions }}"
  - name: Add or update PHP extension ini files
    ansible.builtin.copy:
      src: files/{{ item.src }}
      dest: /usr/local/etc/{{ item.dest }}
    loop:
    - { src: ext-acpu.ini, dest: php/7.4/conf.d/ext-apcu.ini }
    - { src: ext-acpu.ini, dest: php/8.1/conf.d/ext-apcu.ini }
    - { src: ext-acpu.ini, dest: php/8.2/conf.d/ext-apcu.ini }
    - { src: ext-acpu.ini, dest: php/8.3/conf.d/ext-apcu.ini }
    - { src: ext-xdebug.7.4.ini, dest: php/7.4/conf.d/ext-xdebug.ini }
    - { src: ext-xdebug.8.1.ini, dest: php/8.1/conf.d/ext-xdebug.ini }
    - { src: ext-xdebug.8.2.ini, dest: php/8.2/conf.d/ext-xdebug.ini }
    - { src: ext-xdebug.8.3.ini, dest: php/8.3/conf.d/ext-xdebug.ini }
  - name: Remove php.ini changes from xdebug pecl install
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      line: zend_extension="xdebug.so"
      state: absent
    loop: "{{ php_versions }}"

  - name: Configure PHP memory_limit
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      regexp: '^memory_limit ='
      line: memory_limit = 1024M
    loop: "{{ php_versions }}"
  - name: Configure PHP max_execution_time
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      regexp: '^max_execution_time ='
      line: max_execution_time = 90
    loop: "{{ php_versions }}"
  - name: Configure PHP max_input_time
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      regexp: '^max_input_time ='
      line: max_input_time = 90
    loop: "{{ php_versions }}"
  - name: Configure PHP to use Mailhog
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      regexp: '^;?sendmail_path ='
      line: sendmail_path = /usr/local/bin/MailHog sendmail
    loop: "{{ php_versions }}"
  - name: Configure PHP upload_max_filesize
    ansible.builtin.lineinfile:
      path: /usr/local/etc/php/{{ item }}/php.ini
      regexp: '^upload_max_filesize ='
      line: upload_max_filesize = 8M
    loop: "{{ php_versions }}"


  - name: Add or update Caddy and PHP-FPM config files
    ansible.builtin.template:
      src: templates/{{ item.src }}
      dest: /usr/local/etc/{{ item.dest }}
    loop:
    - { src: Caddyfile.j2, dest: Caddyfile }
    - { src: php-fpm_7.4_www-xdebug.conf.j2, dest: php/7.4/php-fpm.d/www-xdebug.conf }
    - { src: php-fpm_7.4_www.conf.j2, dest: php/7.4/php-fpm.d/www.conf }
    - { src: php-fpm_8.1_www-xdebug.conf.j2, dest: php/8.1/php-fpm.d/www-xdebug.conf }
    - { src: php-fpm_8.1_www.conf.j2, dest: php/8.1/php-fpm.d/www.conf }
    - { src: php-fpm_8.2_www-xdebug.conf.j2, dest: php/8.2/php-fpm.d/www-xdebug.conf }
    - { src: php-fpm_8.2_www.conf.j2, dest: php/8.2/php-fpm.d/www.conf }
    - { src: php-fpm_8.3_www-xdebug.conf.j2, dest: php/8.3/php-fpm.d/www-xdebug.conf }
    - { src: php-fpm_8.3_www.conf.j2, dest: php/8.3/php-fpm.d/www.conf }

  - name: Ensure that the Caddy configuration import directory exists
    ansible.builtin.file:
      path: /usr/local/etc/Caddy.conf.d
      state: directory
      mode: '0755'
  - name: Ensure that the ~/sites/ directory exists
    ansible.builtin.file:
      path: ~/sites
      state: directory
      mode: '0755'

  - name: Add or update dnsmasq configuration file
    ansible.builtin.copy:
      src: files/dnsmasq.conf
      dest: /usr/local/etc/dnsmasq.conf
  - name: Ensure that the /etc/resolver directory exists
    ansible.builtin.file:
      path: /etc/resolver
      state: directory
      mode: '0755'
    become: yes
  - name: Ensure that the /etc/resolver/test file exists
    ansible.builtin.copy:
      src: files/test-resolver
      dest: /etc/resolver/test
      mode: '0744'
    become: yes
